# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Backend CI

# Action Triggers
on:
  push:
    branches: 
      - "main"
    paths:
      - "Backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: 
      - "main"
    paths:
      - "Backend/**"
      - ".github/workflows/backend.yml"
 

jobs:
  build:
    name: Backend Test
    runs-on: ubuntu-latest

    # Setup the .NET environment
    steps:

    # Checkout Changes
    - name: Checkout
      uses: actions/checkout@v3

    # Start/Run the Database
    - name: Start Database Container
      run: docker-compose -f "docker-compose.yml" up -d --build sql

    # Install .NET 6
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Install the Test Report Tool
    - name: Install Report Generator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    # Restore Dependencies for Test Project
    - name: Restore dependencies
      working-directory: Backend
      run: dotnet restore
    
    # Build the Test Project
    - name: Build
      working-directory: Backend/Backend.Tests
      run: dotnet build --no-restore Backend.Tests.csproj

    # Run the Tests
    - name: Test
      working-directory: Backend/Backend.Tests
      run: dotnet test Backend.Tests.csproj --no-build --collect:"XPlat Code Coverage" --verbosity normal
    
    # Generate the Test Report
    - name: Generate Report
      working-directory: Backend/Backend.Tests
      run: |
        cd TestResults
        cd [a-zA-Z0-9]*
        reportgenerator -reports:"coverage.cobertura.xml" -targetdir:"coveragereport" -reporttypes:Html
    
    # Upload the Test Results Report
    - name: Uploading Arficact
      uses: actions/upload-artifact@v2
      with:
        name: testrun-result
        path: Backend/Backend.Tests/TestResults
